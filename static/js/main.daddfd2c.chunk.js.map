{"version":3,"sources":["ListComponent.js","ProductsComponent.js","ProductComponent.js","HomeComponent.js","CartComponent.js","MainComponent.js","serviceWorker.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","imgStyle","maxWidth","height","React","Component","require","ProductsComponent","props","processAddToCart","bind","event","this","handleAddToCart","target","value","window","scrollTo","products","map","product","key","price","format","className","src","image","alt","productName","width","long_description","description","details","type","onClick","ProductComponent","productKey","length","HomeComponent","slice","textAlign","title","exact","to","divStyle","minWidth","padding","divPadding","CartComponent","processClearCart","processRemoveProduct","handleRemoveProduct","handleClearCart","cartItems","cart","newItems","undefined","count","items","clearButton","MainComponent","state","orderBy","orderDir","dataIsLoaded","addToCart","clearCart","removeProduct","ctr","itemsCount","index","indexOf","splice","setState","push","forceUpdate","axios","get","then","result","data","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","path","render","component","routerProps","match","params","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.daddfd2c.chunk.js","sourcesContent":["import React from 'react';\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n});\n\nvar imgStyle = {\n  maxWidth: '100%',\n  height: 'auto'\n};\n\n\nclass ListComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.processDelete = this.processDelete.bind(this);\n    }\n\n    processDelete() {\n        this.props.handleDelete(this.props.selectedItem);\n    }\n\n    renderImage(imageUrl) {\n        return (\n            <div>\n                <img src={imageUrl} className=\"img-fluid\" style={imgStyle} />\n            </div>\n        );\n    }\n\n    render() {\n        var price = formatter.format(this.props.product.price);\n        return (\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h3>{this.props.product.productName}</h3>\n                    <img src={\"img/\" + this.props.product.image} className=\"img-fluid\" style={imgStyle} />\n                    <p>{this.props.product.description}</p>\n                    <p>{price}</p>\n                    <p>{this.props.product.details}</p>\n                    <br /><br />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListComponent;\n","import React from 'react';\nimport ListComponent from './ListComponent';\nvar _ = require('lodash');\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n});\n\nvar imgStyle = {\n  maxWidth: '100%',\n  height: 'auto'\n};\n\nclass ProductsComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.processAddToCart = this.processAddToCart.bind(this);\n    }\n\n    processAddToCart(event) {\n        this.props.handleAddToCart(event.target.value);\n    }\n    render() {\n        window.scrollTo(0, 0);\n        var products = this.props.products;\n\n        products = products.map((product, key) => {\n            var price = formatter.format(product.price);\n            return(\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            <img src={\"img/\" + product.image} className=\"img-fluid\" style={imgStyle} alt={product.productName} width=\"650px\"/>\n                            <br /><br />\n                            <p>{product.long_description}</p>\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <br /><br />\n                            <h3>{product.productName}</h3>\n                            <p>{product.description}</p>\n                            <p className=\"price\">{ price }</p>\n                            <p>{product.details}</p>\n                            <img src=\"img/zippay.png\" width=\"351\" className=\"img-fluid\" />\n                            <br /><br />\n                            <button type=\"button\" className=\"btn btn-primary\" onClick = { this.processAddToCart } value={key} >Add To Cart</button>\n                        </div>\n                    </div>\n                    <br /><br />\n                </div>\n            )\n        });\n        return (\n            <div>\n                <header className=\"masthead\">\n                    <img src=\"img/products.png\" className=\"img-fluid\" />\n                </header>\n                <div className=\"container\">\n                    <h2>Products</h2>\n                    { products }\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ProductsComponent;\n","import React from 'react';\nvar _ = require('lodash');\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n});\n\nvar imgStyle = {\n  maxWidth: '100%',\n  height: 'auto'\n};\n\nclass ProductComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.processAddToCart = this.processAddToCart.bind(this);\n    }\n\n    processAddToCart(event) {\n        this.props.handleAddToCart(event.target.value);\n    }\n    render() {\n        window.scrollTo(0, 0);\n        var products = this.props.products;\n        var productKey = this.props.productKey;\n        var price = (products.length > 0) ? formatter.format(products[productKey].price) : 0;\n        if (products.length > 0) {\n            return (\n                <div>\n                    <header className=\"masthead\">\n                        <img src=\"img/products.png\" className=\"img-fluid\" />\n                    </header>\n                    <div className=\"container\">\n                        <h2>Products Details</h2>\n                        <br />\n                        <div className=\"row\">\n                            <div className=\"col-sm-8\">\n                                <img src={\"img/\" + products[productKey].image} className=\"img-fluid\" style={imgStyle} alt={products[productKey].productName} width=\"650px\"/>\n                                <br /><br />\n                                <p>{products[productKey].long_description}</p>\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <br /><br />\n                                <h3>{products[productKey].productName}</h3>\n                                <p>{products[productKey].description}</p>\n                                <p className=\"price\">{ price }</p>\n                                <p>{products[productKey].details}</p>\n                                <img src=\"img/zippay.png\" width=\"351\" className=\"img-fluid\" />\n                                <br /><br />\n                                <button type=\"button\" className=\"btn btn-primary\" onClick = { this.processAddToCart } value={productKey} >Add To Cart</button>\n                                <br /><br /><br />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div>''</div>)\n        }\n    }\n}\n\n\nexport default ProductComponent;\n","import React from 'react';\nimport {\n    Route,\n    NavLink,\n    HashRouter,\n    useParams\n} from \"react-router-dom\";\nvar _ = require('lodash');\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n});\n\nvar imgStyle = {\n    maxWidth: '100%',\n    height: 'auto',\n    width: '150px'\n};\n\nclass HomeComponent extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n        window.scrollTo(0, 0);\n        var products = this.props.products;\n        products = products.slice( 0, 4);\n        products = products.map((product, key) => {\n            var price = formatter.format(product.price);\n            return(\n                <div className=\"col-sm-3 border\" style={{textAlign: 'center'}}>\n                    <HashRouter>\n                    <br />\n                    <img src={\"img/\" + product.image} className=\"img-fluid\" style={imgStyle} alt={product.productName} title={product.productName} />\n                    <h4>{product.productName}</h4>\n                    <p className=\"price\">{price}</p>\n                    <br />\n                    <NavLink exact to={ \"/products/\" + key} className=\"btn btn-success\">\n                        View Details\n                    </NavLink>\n                    <br /><br /><br />\n                    </HashRouter>\n                </div>\n            )\n        });\n\n            return(\n                <div>\n                    <header className=\"masthead\">\n                        <img src=\"img/header.jpg\" className=\"img-fluid\" />\n                    </header>\n\n                    <div className=\"container\">\n                        <center>\n                        <img src=\"img/sub_header.jpg\" className=\"img-fluid\" />\n                        <br />\n                        </center>\n                        <br /><br />\n                        <div className=\"row\">\n                            { products }\n                        </div>\n                    </div>\n                </div>\n            );\n    }\n}\n\nexport default HomeComponent;\n","import React from 'react';\n\nvar formStyle = {\n    width: '20px',\n};\n\nvar divStyle = {\n    minWidth: '185px',\n    padding: '10px',\n};\n\nvar divPadding = {\n    padding: '10px',\n};\n\n\n\n\nclass CartComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.processClearCart = this.processClearCart.bind(this);\n        this.processRemoveProduct = this.processRemoveProduct.bind(this);\n    }\n\n    processRemoveProduct(event) {\n        this.props.handleRemoveProduct(event.target.value);\n    }\n\n    processClearCart() {\n        this.props.handleClearCart();\n    }\n\n\n    render() {\n        window.scrollTo(0, 0);\n        var products = this.props.products;\n        var cartItems = this.props.cart;\n        var newItems = [];\n        cartItems = cartItems.map((cart) => {\n            if (newItems[cart] !== undefined) {\n                newItems[cart].count++;\n            } else {\n                newItems[cart] = { count : 1 };\n            }\n        });\n\n        if (cartItems.length > 0) {\n            var items = newItems.map((cartItems, key) => {\n                return(\n                    <div className=\"row\">\n                        <div style={divPadding}><img src={\"img/\" + products[key].image} className=\"img-thumbnail\" width=\"70\" alt={products[key].productName} /></div>\n                        <div style={divStyle}>{products[key].productName}</div>\n                        <div style={divPadding}>Items: { newItems[key].count }</div>\n                        <div style={divPadding}><button type=\"button\" className=\"btn btn-danger\" onClick={ this.processRemoveProduct } value={key}>Remove</button></div>\n                    </div>\n                )\n            });\n            var clearButton = <div><button type=\"button\" className=\"btn btn-primary\" onClick={ this.processClearCart }>Clear Cart</button><br /><br /></div>;\n        } else {\n            var items = <div>{'No records found.'}<br /><br /></div>;\n            var clearButton = '';\n        }\n\n\n\n        return (\n            <div>\n                <div className=\"container\">\n                    <br /><br /><br />\n                    <center>\n                    <img src=\"img/sub_header2.jpg\" className=\"img-fluid\" />\n                    </center>\n                    <br />\n                    <h2>Cart Items</h2>\n                    { items }\n                    <br />\n                    { clearButton }\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default CartComponent;\n","import React from 'react';\nimport ProductsComponent from './ProductsComponent';\nimport ProductComponent from './ProductComponent';\nimport HomeComponent from './HomeComponent';\nimport CartComponent from './CartComponent';\n\nimport axios from 'axios';\nimport {\n  Route,\n  NavLink,\n  HashRouter,\n  routerProps\n} from \"react-router-dom\";\nvar _ = require('lodash');\n\n\nclass MainComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orderBy: \"name\",\n            orderDir: \"asc\",\n            dataIsLoaded : false,\n            products : [],\n            cart : []\n        };\n        this.addToCart = this.addToCart.bind(this);\n        this.clearCart = this.clearCart.bind(this);\n        this.removeProduct = this.removeProduct.bind(this);\n    }\n\n    removeProduct(productKey) {\n        var cartItems = this.state.cart;\n        var ctr = 0;\n        var itemsCount = cartItems.length;\n        while (ctr < itemsCount) {\n            var index = cartItems.indexOf(productKey);\n            if (index !== -1) {\n                cartItems.splice(index, 1);\n            }\n            ctr++;\n        }\n        this.setState({\n            cart : cartItems\n        });\n    }\n\n    addToCart(productKey) {\n        this.state.cart.push(productKey);\n        this.forceUpdate();\n    }\n\n    clearCart() {\n        this.setState({\n            cart : []\n        });\n    }\n\n    componentDidMount() {\n        axios.get('data.json')\n            .then(result => {\n                this.setState({\n                    products : result.data,\n                    dataIsLoaded : true\n                });\n            })\n    }\n\n    render() {\n        var cartItems = this.state.cart.length;\n        return(\n            <div>\n                <HashRouter>\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\n                        <a className=\"navbar-brand\" href=\"#\"><i className=\"fas fa-couch\"></i> Furnitures</a>\n\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                        aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <NavLink exact to=\"/\" className=\"nav-link\">\n                                        <a className=\"nav-link\" href=\"#\">\n                                            Home\n                                        </a>\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink to=\"/products\" className=\"nav-link\">\n                                        <a className=\"nav-link\" href=\"#\">Products</a>\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink to=\"/cart\" className=\"nav-link\">\n                                        <a className=\"nav-link\" href=\"#\">\n                                            Cart <span className=\"badge badge-danger\">{ cartItems }</span>\n                                        </a>\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n\n                    <div className=\"content\">\n                        <Route exact path=\"/\"  render={props => (<HomeComponent products={this.state.products} />) } />\n                        <Route exact path=\"/products\" render={props => (<ProductsComponent products={this.state.products} handleAddToCart={this.addToCart} />) } />\n                        <Route path=\"/products/:productKey\" component={(routerProps) => <ProductComponent productKey={routerProps.match.params.productKey} products={this.state.products} handleAddToCart={this.addToCart} />} />\n                        <Route path=\"/cart\" render={props => (<CartComponent cart={this.state.cart} products={this.state.products} handleClearCart={this.clearCart} handleRemoveProduct={this.removeProduct}/>) } />\n                    </div>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\n\nexport default MainComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainComponent from './MainComponent';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}